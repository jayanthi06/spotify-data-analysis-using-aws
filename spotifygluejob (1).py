{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "80d5d586-7ee3-4fd9-8d93-8b0d3eb21d25",
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "from awsglue.transforms import *\n",
    "from awsglue.utils import getResolvedOptions\n",
    "from pyspark.context import SparkContext\n",
    "from awsglue.context import GlueContext\n",
    "from awsglue.job import Job\n",
    "\n",
    "# Initialize the job\n",
    "args = getResolvedOptions(sys.argv, ['JOB_NAME'])\n",
    "sc = SparkContext()\n",
    "glueContext = GlueContext(sc)\n",
    "spark = glueContext.spark_session\n",
    "job = Job(glueContext)\n",
    "job.init(args['JOB_NAME'], args)\n",
    "\n",
    "# ----------------------------------------------------------------------------------\n",
    "# Step 1: Load artist data from S3 staging bucket\n",
    "artist_data = glueContext.create_dynamic_frame.from_options(\n",
    "    connection_type=\"s3\",\n",
    "    connection_options={\"paths\": [\"s3://awsproject-jayanthi/staging/\"], \"recurse\": True},\n",
    "    format=\"csv\",\n",
    "    format_options={\"withHeader\": True, \"separator\": \",\"}\n",
    ")\n",
    "\n",
    "# Step 2: Load track data from S3 staging bucket\n",
    "track_data = glueContext.create_dynamic_frame.from_options(\n",
    "    connection_type=\"s3\",\n",
    "    connection_options={\"paths\": [\"s3://awsproject-jayanthi/staging/\"], \"recurse\": True},\n",
    "    format=\"csv\",\n",
    "    format_options={\"withHeader\": True, \"separator\": \",\"}\n",
    ")\n",
    "\n",
    "# ----------------------------------------------------------------------------------\n",
    "# Step 3: Join artist and track data on 'track_id'\n",
    "joined_data = Join.apply(\n",
    "    frame1=artist_data, \n",
    "    frame2=track_data, \n",
    "    keys1=[\"track_id\"], \n",
    "    keys2=[\"track_id\"],\n",
    "    transformation_ctx=\"joined_data\"\n",
    ")\n",
    "\n",
    "# Step 4: Drop unnecessary fields (if needed)\n",
    "cleaned_data = DropFields.apply(\n",
    "    frame=joined_data,\n",
    "    paths=[\"unwanted_column1\", \"unwanted_column2\"],  # Replace with actual columns you dropped\n",
    "    transformation_ctx=\"cleaned_data\"\n",
    ")\n",
    "\n",
    "# ----------------------------------------------------------------------------------\n",
    "# Step 5: Write the final cleaned data back to S3 in Parquet format\n",
    "glueContext.write_dynamic_frame.from_options(\n",
    "    frame=cleaned_data,\n",
    "    connection_type=\"s3\",\n",
    "    connection_options={\"path\": \"s3://awsproject-jayanthi/datawarehouse/\"},\n",
    "    format=\"parquet\",\n",
    "    format_options={\"compression\": \"snappy\"}\n",
    ")\n",
    "\n",
    "# ----------------------------------------------------------------------------------\n",
    "# Commit the job\n",
    "job.commit()\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
